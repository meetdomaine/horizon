# THEME DEPLOYMENT WORKFLOW
# -------------------------
# This workflow is ran manually by clicking the "Run workflow" button in the Github Actions tab
# NOTE: JSON config files will not be pushed as they are being ignored in the .shopifyignore file

# Required Github enviroment secrets / variables:
# - SHOPIFY_CLI_THEME_TOKEN: Shopify CLI token
# - SHOPIFY_FLAG_STORE: Shopify store URL
# These need to be added via the Github repo settings under "Environments"

name: Deploy theme

on:
  workflow_dispatch:
    inputs:
      store:
        description: 'Environment'
        type: environment
        required: true
      theme_override:
        description: 'Deploy to Theme ID' # By default, a new theme will be created for each deployment.
        type: string
      source_theme:
        description: 'Pull content changes from Theme ID' # By default, all content is pulled from the published theme.
        type: string

run-name: Deploying ${{ github.head_ref || github.ref_name || github.ref || github.event.ref }} to ${{ inputs.store }} (@${{ github.actor }})

jobs:
  deploy:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    environment: ${{ inputs.store }}
    env:
      SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
      SHOPIFY_FLAG_STORE: '${{ vars.SHOPIFY_FLAG_STORE }}'
    steps:
      - uses: actions/checkout@v4

      - name: Validate theme IDs if source theme is set
        if: ${{ inputs.source_theme != '' }}
        run: |
          if [[ -n "${{ inputs.theme_override }}" && -n "${{ inputs.source_theme }}" && "${{ inputs.theme_override }}" == "${{ inputs.source_theme }}" ]]; then
            echo "❌ ERROR: theme_override and source_theme cannot be the same ID!"
            echo "theme_override: ${{ inputs.theme_override }}"
            echo "source_theme: ${{ inputs.source_theme }}"
            echo "This would cause the theme to sync JSON content from itself, which is not allowed."
            exit 1
          fi
          echo "✅ Theme Override and Source Theme ID validation passed"

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1
          bundler: 'latest'

      - name: Install Shopify CLI
        run: npm install -g @shopify/cli@3.67.1

        # NOTE: Duplicate Action does not work if the Store is using Translate and Localise App from Shopify, please remove this Step
        # Along with this step remove all instance of `inputs.theme_override == '' && steps.duplicate.outputs.themeId ||` from the workflow
      - uses: devil1991/shopify-dupliate-theme@v1.4.4
        id: duplicate
        if: ${{ inputs.theme_override == '' }}
        with:
          store: '${{ env.SHOPIFY_FLAG_STORE }}'
          env: ${{ github.head_ref || github.ref_name || github.ref || github.event.ref }}

      - name: Deploy theme
        run: shopify theme push --theme $THEME_ID
        if: ${{ inputs.store }} && ${{ github.head_ref || github.ref_name || github.ref || github.event.ref }}
        env:
          # Theme ID is read from variable of previous step
          THEME_ID: ${{ inputs.theme_override == '' && steps.duplicate.outputs.themeId || inputs.theme_override }}

      - uses: devil1991/shopify-jsons-sync@v1.5.0
        # This action is used to sync new JSON content (locale strings & JSON templates) to the theme
        # Note: No existing content on the theme being deployed too will be edited or pushed
        with:
          store: '${{ env.SHOPIFY_FLAG_STORE }}'
          theme: ${{ inputs.theme_override == '' && steps.duplicate.outputs.themeId || inputs.theme_override }}
          source-theme: ${{ inputs.source_theme != '' && inputs.source_theme || null }}
